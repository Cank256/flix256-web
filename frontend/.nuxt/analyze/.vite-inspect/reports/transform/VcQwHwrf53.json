{
  "resolvedId": "/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/components/Modal.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <transition name=\"modal\" appear>\n    <div\n      ref=\"modal\"\n      class=\"modal\"\n      tabindex=\"-1\"\n      aria-hidden=\"false\"\n      :aria-label=\"label\"\n      role=\"dialog\"\n      :class=\"modalClass\"\n      @click=\"close\">\n      <div class=\"modal__wrap\">\n        <div\n          class=\"modal__body\"\n          @click.stop>\n          <button\n            class=\"modal__close\"\n            aria-label=\"Close\"\n            type=\"button\"\n            @click.stop=\"close\">\n            <!-- eslint-disable-next-line -->\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"1.5\"><path d=\"M.75.75l13.5 13.5M14.25.75L.75 14.25\"/></g></svg>\n          </button>\n\n          <div :class=\"`modal__${type}`\">\n            <iframe\n              v-if=\"type === 'iframe' && activeItem\"\n              :src=\"activeItem.src\"\n              frameborder=\"0\"\n              allow=\"autoplay; encrypted-media\"\n              allowfullscreen />\n              \n              <NuxtImg v-if=\"type === 'image' && activeItem\" :src=\"activeItem.src\" loading=\"lazy\" class=\"lazyload\" :alt=\"name\" />\n          </div>\n\n          <div\n            v-if=\"showNav\"\n            class=\"modal__nav\">\n            <button\n              class=\"modal__arrow modal__arrow--prev\"\n              aria-label=\"Previous\"\n              type=\"button\"\n              @click.stop=\"previous\">\n              <!-- eslint-disable-next-line -->\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M17.9 23.2L6.1 12 17.9.8\"></path></svg>\n            </button>\n\n            <div class=\"modal__count\">\n              {{ selected + 1 }} / {{ data.length }}\n            </div>\n\n            <button\n              class=\"modal__arrow modal__arrow--next\"\n              aria-label=\"Next\"\n              type=\"button\"\n              title=\"Next\"\n              @click.stop=\"next\">\n              <!-- eslint-disable-next-line -->\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M6.1 23.2L17.9 12 6.1.8\"></path></svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { debounce } from '~/mixins/Functions';\n\nlet focusedElBeforeOpen;\nlet focusableEls;\nlet firstFocusableEl;\nlet lastFocusableEl;\n\nexport default {\n  props: {\n    data: {\n      type: Array,\n      required: false,\n      default: function () {\n        return [];\n      },\n    },\n\n    type: {\n      type: String,\n      required: false,\n      default: 'image',\n    },\n\n    modifier: {\n      type: String,\n      required: false,\n      default: '',\n    },\n\n    nav: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n\n    startAt: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n\n    ariaLabel: {\n      type: String,\n      required: false,\n      default: '',\n    },\n  },\n\n  head () {\n    return {\n      bodyAttrs: {\n        class: 'modal-open',\n      },\n    };\n  },\n\n  data () {\n    return {\n      selected: null,\n      activeItem: null,\n    };\n  },\n\n  computed: {\n    modalClass () {\n      return {\n        'modal--nav': this.showNav,\n        [`modal--${this.type}`]: true,\n        [this.modifier]: true,\n      };\n    },\n\n    showNav () {\n      return this.nav && this.data.length > 1;\n    },\n\n    label () {\n      if (this.ariaLabel) {\n        return this.ariaLabel;\n      } else if (this.activeItem && this.activeItem.name) {\n        return this.activeItem.name;\n      } else {\n        return null;\n      }\n    },\n  },\n\n  watch: {\n    selected () {\n      this.activeItem = this.data[this.selected];\n    },\n  },\n\n  created () {\n    this.selected = this.startAt;\n  },\n\n  beforeMount () {\n    window.addEventListener('keydown', this.handleKeyDown);\n    focusedElBeforeOpen = document.activeElement;\n  },\n\n  mounted () {\n    focusableEls = this.$refs.modal.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n    focusableEls = Array.prototype.slice.call(focusableEls);\n\n    firstFocusableEl = focusableEls[0];\n    lastFocusableEl = focusableEls[focusableEls.length];\n\n    // focus on the first element\n    firstFocusableEl.focus();\n\n    // calculate iframe size for responsive sizing on resize\n    if (this.type === 'iframe') {\n      this.handleIframeSize();\n      window.addEventListener('resize', this.resizeIframeSize);\n    }\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('keydown', this.handleKeyDown);\n\n    if (this.type === 'iframe') {\n      window.removeEventListener('resize', this.resizeIframeSize);\n    }\n\n    if (focusedElBeforeOpen) {\n      focusedElBeforeOpen.focus();\n    }\n  },\n\n  methods: {\n    previous () {\n      this.selected = ((this.selected) + this.data.length) % this.data.length;\n    },\n\n    next () {\n      this.selected = (this.selected + 1) % this.data.length;\n    },\n\n    close () {\n      this.$emit('close');\n    },\n\n    handleKeyDown (e) {\n      if (e.keyCode === 27) { // esc key\n        this.close();\n      } else if (this.nav && e.keyCode === 39) { // right arrow\n        this.next();\n      } else if (this.nav && e.keyCode === 37) { // left arrow\n        this.previous();\n      } else if (e.keyCode === 9) { // tab\n        if (focusableEls.length === 1) {\n          e.preventDefault();\n          return;\n        }\n\n        if (e.shiftKey) {\n          this.handleBackwardTab(e);\n        } else {\n          this.handleForwardTab(e);\n        }\n      }\n    },\n\n    handleForwardTab (e) {\n      if (document.activeElement === lastFocusableEl) {\n        e.preventDefault();\n        firstFocusableEl.focus();\n      }\n    },\n\n    handleBackwardTab (e) {\n      if (document.activeElement === firstFocusableEl) {\n        e.preventDefault();\n        lastFocusableEl.focus();\n      }\n    },\n\n    handleIframeSize () {\n      const aspectRatio = 16 / 9;\n      const styles = getComputedStyle(this.$refs.modal);\n      let maxWidth = this.$refs.modal.offsetWidth;\n      let maxHeight = this.$refs.modal.offsetHeight;\n      let width;\n      let height;\n\n      maxWidth -= parseFloat(styles.paddingRight) + parseFloat(styles.paddingLeft);\n      maxHeight -= parseFloat(styles.paddingTop) + parseFloat(styles.paddingBottom);\n\n      width = maxWidth;\n      height = maxHeight;\n\n      if (maxHeight > maxWidth / aspectRatio) {\n        height = maxWidth / aspectRatio;\n      } else if (maxWidth > maxHeight * aspectRatio) {\n        width = maxHeight * aspectRatio;\n      }\n\n      this.$refs.modal.querySelector('.modal__iframe').style.width = `${width}px`;\n      this.$refs.modal.querySelector('.modal__iframe').style.height = `${height}px`;\n    },\n\n    resizeIframeSize: debounce(function () {\n      this.handleIframeSize();\n    }, 600),\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '~/assets/css/utilities/_variables.scss';\n\nbody.modal-open {\n  overflow: hidden;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 999;\n  overflow-x: hidden;\n  overflow-y: auto;\n  cursor: pointer;\n  background-color: rgba(0,0,0,0.8);\n\n  @media (min-width: $breakpoint-large) {\n    padding: 4.4rem 10rem;\n  }\n}\n\n.modal__wrap {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n}\n\n.modal__body {\n  position: relative;\n  margin: auto;\n  cursor: default;\n}\n\n.modal__close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 4.4rem;\n  height: 4.4rem;\n  padding: 0;\n  background: none;\n\n  @media (max-width: $breakpoint-large) {\n    position: fixed;\n    left: 0;\n    width: 6rem;\n    height: 6rem;\n  }\n}\n\n.modal--nav {\n  @media (max-width: $breakpoint-large) {\n    padding-bottom: 5rem;\n  }\n\n  .modal__image img {\n    @media (max-width: $breakpoint-large) {\n      max-height: calc(100vh - 5rem);\n    }\n  }\n}\n\n.modal__nav {\n  position: absolute;\n  right: 0;\n  bottom: -4.4rem;\n  left: 0;\n  display: flex;\n  align-items: center;\n  height: 4.4rem;\n\n  @media (max-width: $breakpoint-large) {\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    justify-content: space-between;\n    height: 5rem;\n    background-color: #000;\n  }\n\n  @media (min-width: $breakpoint-large) {\n    justify-content: flex-end;\n  }\n}\n\n.modal__arrow {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  background: none;\n\n  @media (max-width: $breakpoint-large) {\n    flex: 1;\n    height: 5rem;\n  }\n\n  @media (min-width: $breakpoint-large) {\n    position: fixed;\n    top: 50%;\n    width: 10rem;\n    height: 10rem;\n    margin-top: -5rem;\n  }\n}\n\n@media (min-width: $breakpoint-large) {\n  .modal__arrow--prev {\n    left: 0;\n  }\n\n  .modal__arrow--next {\n    right: 0;\n  }\n}\n\n.modal__count {\n  font-size: 1.6rem;\n  line-height: 1;\n}\n\n@media (min-width: $breakpoint-large) {\n  .modal--images {\n    .modal__close {\n      top: -4.4rem;\n    }\n  }\n}\n\n.modal__image {\n  &.lazyloading {\n    background: url('~assets/img/loader.svg') no-repeat center;\n  }\n\n  img {\n    max-height: calc(100vh);\n\n    @media (min-width: $breakpoint-large) {\n      max-height: calc(100vh - 8.8rem);\n    }\n  }\n}\n\n@media (min-width: $breakpoint-large) {\n  .modal--iframe {\n    .modal__close {\n      top: -4.4rem;\n    }\n  }\n}\n\n.modal__iframe {\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding-bottom: 56.25%;\n  overflow: hidden;\n\n  iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    background: #000;\n    border: 0;\n  }\n}\n\n.modal-enter,\n.modal-leave-active {\n  opacity: 0;\n}\n\n.modal-enter-active,\n.modal-leave-active {\n  transition: opacity 0.3s ease;\n}\n</style>\n",
      "start": 1708426961816,
      "end": 1708426962004,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708426962004,
      "end": 1708426962004,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { debounce } from '~/mixins/Functions';\n\nlet focusedElBeforeOpen;\nlet focusableEls;\nlet firstFocusableEl;\nlet lastFocusableEl;\n\nconst _sfc_main = {\n  props: {\n    data: {\n      type: Array,\n      required: false,\n      default: function () {\n        return [];\n      },\n    },\n\n    type: {\n      type: String,\n      required: false,\n      default: 'image',\n    },\n\n    modifier: {\n      type: String,\n      required: false,\n      default: '',\n    },\n\n    nav: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n\n    startAt: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n\n    ariaLabel: {\n      type: String,\n      required: false,\n      default: '',\n    },\n  },\n\n  head () {\n    return {\n      bodyAttrs: {\n        class: 'modal-open',\n      },\n    };\n  },\n\n  data () {\n    return {\n      selected: null,\n      activeItem: null,\n    };\n  },\n\n  computed: {\n    modalClass () {\n      return {\n        'modal--nav': this.showNav,\n        [`modal--${this.type}`]: true,\n        [this.modifier]: true,\n      };\n    },\n\n    showNav () {\n      return this.nav && this.data.length > 1;\n    },\n\n    label () {\n      if (this.ariaLabel) {\n        return this.ariaLabel;\n      } else if (this.activeItem && this.activeItem.name) {\n        return this.activeItem.name;\n      } else {\n        return null;\n      }\n    },\n  },\n\n  watch: {\n    selected () {\n      this.activeItem = this.data[this.selected];\n    },\n  },\n\n  created () {\n    this.selected = this.startAt;\n  },\n\n  beforeMount () {\n    window.addEventListener('keydown', this.handleKeyDown);\n    focusedElBeforeOpen = document.activeElement;\n  },\n\n  mounted () {\n    focusableEls = this.$refs.modal.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n    focusableEls = Array.prototype.slice.call(focusableEls);\n\n    firstFocusableEl = focusableEls[0];\n    lastFocusableEl = focusableEls[focusableEls.length];\n\n    // focus on the first element\n    firstFocusableEl.focus();\n\n    // calculate iframe size for responsive sizing on resize\n    if (this.type === 'iframe') {\n      this.handleIframeSize();\n      window.addEventListener('resize', this.resizeIframeSize);\n    }\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('keydown', this.handleKeyDown);\n\n    if (this.type === 'iframe') {\n      window.removeEventListener('resize', this.resizeIframeSize);\n    }\n\n    if (focusedElBeforeOpen) {\n      focusedElBeforeOpen.focus();\n    }\n  },\n\n  methods: {\n    previous () {\n      this.selected = ((this.selected) + this.data.length) % this.data.length;\n    },\n\n    next () {\n      this.selected = (this.selected + 1) % this.data.length;\n    },\n\n    close () {\n      this.$emit('close');\n    },\n\n    handleKeyDown (e) {\n      if (e.keyCode === 27) { // esc key\n        this.close();\n      } else if (this.nav && e.keyCode === 39) { // right arrow\n        this.next();\n      } else if (this.nav && e.keyCode === 37) { // left arrow\n        this.previous();\n      } else if (e.keyCode === 9) { // tab\n        if (focusableEls.length === 1) {\n          e.preventDefault();\n          return;\n        }\n\n        if (e.shiftKey) {\n          this.handleBackwardTab(e);\n        } else {\n          this.handleForwardTab(e);\n        }\n      }\n    },\n\n    handleForwardTab (e) {\n      if (document.activeElement === lastFocusableEl) {\n        e.preventDefault();\n        firstFocusableEl.focus();\n      }\n    },\n\n    handleBackwardTab (e) {\n      if (document.activeElement === firstFocusableEl) {\n        e.preventDefault();\n        lastFocusableEl.focus();\n      }\n    },\n\n    handleIframeSize () {\n      const aspectRatio = 16 / 9;\n      const styles = getComputedStyle(this.$refs.modal);\n      let maxWidth = this.$refs.modal.offsetWidth;\n      let maxHeight = this.$refs.modal.offsetHeight;\n      let width;\n      let height;\n\n      maxWidth -= parseFloat(styles.paddingRight) + parseFloat(styles.paddingLeft);\n      maxHeight -= parseFloat(styles.paddingTop) + parseFloat(styles.paddingBottom);\n\n      width = maxWidth;\n      height = maxHeight;\n\n      if (maxHeight > maxWidth / aspectRatio) {\n        height = maxWidth / aspectRatio;\n      } else if (maxWidth > maxHeight * aspectRatio) {\n        width = maxHeight * aspectRatio;\n      }\n\n      this.$refs.modal.querySelector('.modal__iframe').style.width = `${width}px`;\n      this.$refs.modal.querySelector('.modal__iframe').style.height = `${height}px`;\n    },\n\n    resizeIframeSize: debounce(function () {\n      this.handleIframeSize();\n    }, 600),\n  },\n};\n\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, Transition as _Transition, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = [\"aria-label\"]\nconst _hoisted_2 = { class: \"modal__wrap\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"15\",\n  height: \"15\",\n  viewBox: \"0 0 15 15\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"g\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    \"stroke-width\": \"1.5\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"path\", { d: \"M.75.75l13.5 13.5M14.25.75L.75 14.25\" })\n  ])\n], -1)\nconst _hoisted_4 = [\n  _hoisted_3\n]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = {\n  key: 0,\n  class: \"modal__nav\"\n}\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"20\",\n  height: \"20\",\n  viewBox: \"0 0 24 24\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    \"stroke-width\": \"1.5\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    d: \"M17.9 23.2L6.1 12 17.9.8\"\n  })\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\nconst _hoisted_9 = { class: \"modal__count\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"20\",\n  height: \"20\",\n  viewBox: \"0 0 24 24\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    \"stroke-width\": \"1.5\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    d: \"M6.1 23.2L17.9 12 6.1.8\"\n  })\n], -1)\nconst _hoisted_11 = [\n  _hoisted_10\n]\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NuxtImg = _resolveComponent(\"NuxtImg\")\n\n  return (_openBlock(), _createBlock(_Transition, {\n    name: \"modal\",\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", {\n        ref: \"modal\",\n        class: _normalizeClass([\"modal\", $options.modalClass]),\n        tabindex: \"-1\",\n        \"aria-hidden\": \"false\",\n        \"aria-label\": $options.label,\n        role: \"dialog\",\n        onClick: _cache[4] || (_cache[4] = (...args) => ($options.close && $options.close(...args)))\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"modal__body\",\n            onClick: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"]))\n          }, [\n            _createElementVNode(\"button\", {\n              class: \"modal__close\",\n              \"aria-label\": \"Close\",\n              type: \"button\",\n              onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => ($options.close && $options.close(...args)), [\"stop\"]))\n            }, _hoisted_4),\n            _createElementVNode(\"div\", {\n              class: _normalizeClass(`modal__${$props.type}`)\n            }, [\n              ($props.type === 'iframe' && $data.activeItem)\n                ? (_openBlock(), _createElementBlock(\"iframe\", {\n                    key: 0,\n                    src: $data.activeItem.src,\n                    frameborder: \"0\",\n                    allow: \"autoplay; encrypted-media\",\n                    allowfullscreen: \"\"\n                  }, null, 8, _hoisted_5))\n                : _createCommentVNode(\"\", true),\n              ($props.type === 'image' && $data.activeItem)\n                ? (_openBlock(), _createBlock(_component_NuxtImg, {\n                    key: 1,\n                    src: $data.activeItem.src,\n                    loading: \"lazy\",\n                    class: \"lazyload\",\n                    alt: _ctx.name\n                  }, null, 8, [\"src\", \"alt\"]))\n                : _createCommentVNode(\"\", true)\n            ], 2),\n            ($options.showNav)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  _createElementVNode(\"button\", {\n                    class: \"modal__arrow modal__arrow--prev\",\n                    \"aria-label\": \"Previous\",\n                    type: \"button\",\n                    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => ($options.previous && $options.previous(...args)), [\"stop\"]))\n                  }, _hoisted_8),\n                  _createElementVNode(\"div\", _hoisted_9, _toDisplayString($data.selected + 1) + \" / \" + _toDisplayString($props.data.length), 1),\n                  _createElementVNode(\"button\", {\n                    class: \"modal__arrow modal__arrow--next\",\n                    \"aria-label\": \"Next\",\n                    type: \"button\",\n                    title: \"Next\",\n                    onClick: _cache[2] || (_cache[2] = _withModifiers((...args) => ($options.next && $options.next(...args)), [\"stop\"]))\n                  }, _hoisted_11)\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ], 10, _hoisted_1)\n    ]),\n    _: 1\n  }))\n}\n\nimport \"/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/components/Modal.vue?vue&type=style&index=0&lang.scss\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1708426962004,
      "end": 1708426962011,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708426962011,
      "end": 1708426962011,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708426962011,
      "end": 1708426962011,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708426962011,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708426962012,
      "end": 1708426962012,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708426962012,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708426962016,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708426962016,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708426962016,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708426962016,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/node_modules/@nuxt/image/dist/runtime/components/nuxt-img\";\n\nimport { debounce } from '~/mixins/Functions';\n\nlet focusedElBeforeOpen;\nlet focusableEls;\nlet firstFocusableEl;\nlet lastFocusableEl;\n\nconst _sfc_main = {\n  props: {\n    data: {\n      type: Array,\n      required: false,\n      default: function () {\n        return [];\n      },\n    },\n\n    type: {\n      type: String,\n      required: false,\n      default: 'image',\n    },\n\n    modifier: {\n      type: String,\n      required: false,\n      default: '',\n    },\n\n    nav: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n\n    startAt: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n\n    ariaLabel: {\n      type: String,\n      required: false,\n      default: '',\n    },\n  },\n\n  head () {\n    return {\n      bodyAttrs: {\n        class: 'modal-open',\n      },\n    };\n  },\n\n  data () {\n    return {\n      selected: null,\n      activeItem: null,\n    };\n  },\n\n  computed: {\n    modalClass () {\n      return {\n        'modal--nav': this.showNav,\n        [`modal--${this.type}`]: true,\n        [this.modifier]: true,\n      };\n    },\n\n    showNav () {\n      return this.nav && this.data.length > 1;\n    },\n\n    label () {\n      if (this.ariaLabel) {\n        return this.ariaLabel;\n      } else if (this.activeItem && this.activeItem.name) {\n        return this.activeItem.name;\n      } else {\n        return null;\n      }\n    },\n  },\n\n  watch: {\n    selected () {\n      this.activeItem = this.data[this.selected];\n    },\n  },\n\n  created () {\n    this.selected = this.startAt;\n  },\n\n  beforeMount () {\n    window.addEventListener('keydown', this.handleKeyDown);\n    focusedElBeforeOpen = document.activeElement;\n  },\n\n  mounted () {\n    focusableEls = this.$refs.modal.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n    focusableEls = Array.prototype.slice.call(focusableEls);\n\n    firstFocusableEl = focusableEls[0];\n    lastFocusableEl = focusableEls[focusableEls.length];\n\n    // focus on the first element\n    firstFocusableEl.focus();\n\n    // calculate iframe size for responsive sizing on resize\n    if (this.type === 'iframe') {\n      this.handleIframeSize();\n      window.addEventListener('resize', this.resizeIframeSize);\n    }\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('keydown', this.handleKeyDown);\n\n    if (this.type === 'iframe') {\n      window.removeEventListener('resize', this.resizeIframeSize);\n    }\n\n    if (focusedElBeforeOpen) {\n      focusedElBeforeOpen.focus();\n    }\n  },\n\n  methods: {\n    previous () {\n      this.selected = ((this.selected) + this.data.length) % this.data.length;\n    },\n\n    next () {\n      this.selected = (this.selected + 1) % this.data.length;\n    },\n\n    close () {\n      this.$emit('close');\n    },\n\n    handleKeyDown (e) {\n      if (e.keyCode === 27) { // esc key\n        this.close();\n      } else if (this.nav && e.keyCode === 39) { // right arrow\n        this.next();\n      } else if (this.nav && e.keyCode === 37) { // left arrow\n        this.previous();\n      } else if (e.keyCode === 9) { // tab\n        if (focusableEls.length === 1) {\n          e.preventDefault();\n          return;\n        }\n\n        if (e.shiftKey) {\n          this.handleBackwardTab(e);\n        } else {\n          this.handleForwardTab(e);\n        }\n      }\n    },\n\n    handleForwardTab (e) {\n      if (document.activeElement === lastFocusableEl) {\n        e.preventDefault();\n        firstFocusableEl.focus();\n      }\n    },\n\n    handleBackwardTab (e) {\n      if (document.activeElement === firstFocusableEl) {\n        e.preventDefault();\n        lastFocusableEl.focus();\n      }\n    },\n\n    handleIframeSize () {\n      const aspectRatio = 16 / 9;\n      const styles = getComputedStyle(this.$refs.modal);\n      let maxWidth = this.$refs.modal.offsetWidth;\n      let maxHeight = this.$refs.modal.offsetHeight;\n      let width;\n      let height;\n\n      maxWidth -= parseFloat(styles.paddingRight) + parseFloat(styles.paddingLeft);\n      maxHeight -= parseFloat(styles.paddingTop) + parseFloat(styles.paddingBottom);\n\n      width = maxWidth;\n      height = maxHeight;\n\n      if (maxHeight > maxWidth / aspectRatio) {\n        height = maxWidth / aspectRatio;\n      } else if (maxWidth > maxHeight * aspectRatio) {\n        width = maxHeight * aspectRatio;\n      }\n\n      this.$refs.modal.querySelector('.modal__iframe').style.width = `${width}px`;\n      this.$refs.modal.querySelector('.modal__iframe').style.height = `${height}px`;\n    },\n\n    resizeIframeSize: debounce(function () {\n      this.handleIframeSize();\n    }, 600),\n  },\n};\n\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, Transition as _Transition, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = [\"aria-label\"]\nconst _hoisted_2 = { class: \"modal__wrap\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"15\",\n  height: \"15\",\n  viewBox: \"0 0 15 15\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"g\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    \"stroke-width\": \"1.5\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"path\", { d: \"M.75.75l13.5 13.5M14.25.75L.75 14.25\" })\n  ])\n], -1)\nconst _hoisted_4 = [\n  _hoisted_3\n]\nconst _hoisted_5 = [\"src\"]\nconst _hoisted_6 = {\n  key: 0,\n  class: \"modal__nav\"\n}\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"20\",\n  height: \"20\",\n  viewBox: \"0 0 24 24\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    \"stroke-width\": \"1.5\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    d: \"M17.9 23.2L6.1 12 17.9.8\"\n  })\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\nconst _hoisted_9 = { class: \"modal__count\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"20\",\n  height: \"20\",\n  viewBox: \"0 0 24 24\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    \"stroke-width\": \"1.5\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    d: \"M6.1 23.2L17.9 12 6.1.8\"\n  })\n], -1)\nconst _hoisted_11 = [\n  _hoisted_10\n]\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NuxtImg = __nuxt_component_0\n\n  return (_openBlock(), _createBlock(_Transition, {\n    name: \"modal\",\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", {\n        ref: \"modal\",\n        class: _normalizeClass([\"modal\", $options.modalClass]),\n        tabindex: \"-1\",\n        \"aria-hidden\": \"false\",\n        \"aria-label\": $options.label,\n        role: \"dialog\",\n        onClick: _cache[4] || (_cache[4] = (...args) => ($options.close && $options.close(...args)))\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"modal__body\",\n            onClick: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"]))\n          }, [\n            _createElementVNode(\"button\", {\n              class: \"modal__close\",\n              \"aria-label\": \"Close\",\n              type: \"button\",\n              onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => ($options.close && $options.close(...args)), [\"stop\"]))\n            }, _hoisted_4),\n            _createElementVNode(\"div\", {\n              class: _normalizeClass(`modal__${$props.type}`)\n            }, [\n              ($props.type === 'iframe' && $data.activeItem)\n                ? (_openBlock(), _createElementBlock(\"iframe\", {\n                    key: 0,\n                    src: $data.activeItem.src,\n                    frameborder: \"0\",\n                    allow: \"autoplay; encrypted-media\",\n                    allowfullscreen: \"\"\n                  }, null, 8, _hoisted_5))\n                : _createCommentVNode(\"\", true),\n              ($props.type === 'image' && $data.activeItem)\n                ? (_openBlock(), _createBlock(_component_NuxtImg, {\n                    key: 1,\n                    src: $data.activeItem.src,\n                    loading: \"lazy\",\n                    class: \"lazyload\",\n                    alt: _ctx.name\n                  }, null, 8, [\"src\", \"alt\"]))\n                : _createCommentVNode(\"\", true)\n            ], 2),\n            ($options.showNav)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  _createElementVNode(\"button\", {\n                    class: \"modal__arrow modal__arrow--prev\",\n                    \"aria-label\": \"Previous\",\n                    type: \"button\",\n                    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => ($options.previous && $options.previous(...args)), [\"stop\"]))\n                  }, _hoisted_8),\n                  _createElementVNode(\"div\", _hoisted_9, _toDisplayString($data.selected + 1) + \" / \" + _toDisplayString($props.data.length), 1),\n                  _createElementVNode(\"button\", {\n                    class: \"modal__arrow modal__arrow--next\",\n                    \"aria-label\": \"Next\",\n                    type: \"button\",\n                    title: \"Next\",\n                    onClick: _cache[2] || (_cache[2] = _withModifiers((...args) => ($options.next && $options.next(...args)), [\"stop\"]))\n                  }, _hoisted_11)\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ], 10, _hoisted_1)\n    ]),\n    _: 1\n  }))\n}\n\nimport \"/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/components/Modal.vue?vue&type=style&index=0&lang.scss\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1708426962016,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708426962016,
      "end": 1708426962016,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708426962016,
      "end": 1708426962017,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708426962017,
      "end": 1708426962017,
      "order": "normal"
    }
  ]
}
