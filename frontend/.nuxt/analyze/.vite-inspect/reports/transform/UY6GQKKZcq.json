{
  "resolvedId": "/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/pages/favorites/index.vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n\t<main class=\"main\">\n\t\t<TopNav title=\"Favorites\" />\n\n\t\t<Listing\n\t\t\tv-if=\"favoritesData && favoritesData.results.length\"\n\t\t\ttitle=\"Favorites\"\n\t\t\t:items=\"favoritesData\"\n\t\t\t:loading=\"loading\"\n\t\t\t@loadMore=\"loadMore\"\n\t\t/>\n\t</main>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { useBackendStore } from \"~/store/backend\";\nimport TopNav from \"~/components/global/TopNav\";\nimport Listing from \"~/components/Listing\";\n\nexport default {\n\tcomponents: {\n\t\tTopNav,\n\t\tListing,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t};\n\t},\n\n\tsetup() {\n\t\tconst store = useBackendStore();\n\t\tconst favoritesData = ref('');\n\t\tconst userData = ref('');\n\n        onMounted(() => {\n            userData.value = JSON.parse(localStorage.getItem(\"user\"));\n            const user_id = userData.value?.user?._id || '';\n\n            async function fetchData() {\n                try {\n                    const items = await store.getFavorites(user_id, { page: 1 });\n                    return favoritesData.value = items.data;\n                } catch (error) {\n                    console.error(\"There was an error in fetching data\", error);\n                }\n            }\n\n            fetchData();\n        });\n\n\t\treturn {\n\t\t\tfavoritesData,\n            userData\n\t\t};\n\t},\n\n\thead() {\n\t\treturn {\n\t\t\ttitle: this.title,\n\t\t\tmeta: [\n\t\t\t\t{ hid: \"og:title\", property: \"og:title\", content: this.title },\n\t\t\t\t{\n\t\t\t\t\thid: \"og:url\",\n\t\t\t\t\tproperty: \"og:url\",\n\t\t\t\t\tcontent: `${process.env.FRONTEND_URL}${this.$route.path}`,\n\t\t\t\t},\n\t\t\t],\n\t\t\tbodyAttrs: {\n\t\t\t\tclass: \"topnav-active\",\n\t\t\t},\n\t\t};\n\t},\n\n\tmethods: {\n\t\tloadMore() {\n\t\t\tconst store = useBackendStore();\n\t\t\tthis.loading = true;\n\n\t\t\tstore\n\t\t\t\t.getFavorites(this.userData._id, {\n\t\t\t\t\tpage: this.favoritesData.page + 1,\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.favoritesData.results = this.favoritesData.results.concat(\n\t\t\t\t\t\tresponse.data.results\n\t\t\t\t\t);\n\t\t\t\t\tthis.favoritesData.page = response.data.page;\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t});\n\t\t},\n\t},\n};\n</script>\n",
      "start": 1708426961103,
      "end": 1708426961221,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708426961221,
      "end": 1708426961221,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708426961221,
      "end": 1708426961222,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708426961222,
      "end": 1708426961222,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708426961222,
      "end": 1708426961222,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708426961222,
      "end": 1708426961222,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708426961222,
      "end": 1708426961222,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708426961222,
      "end": 1708426961222,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { ref, onMounted } from \"vue\";\nimport { useBackendStore } from \"~/store/backend\";\nimport TopNav from \"~/components/global/TopNav\";\nimport Listing from \"~/components/Listing\";\n\nconst _sfc_main = {\n\tcomponents: {\n\t\tTopNav,\n\t\tListing,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t};\n\t},\n\n\tsetup() {\n\t\tconst store = useBackendStore();\n\t\tconst favoritesData = ref('');\n\t\tconst userData = ref('');\n\n        onMounted(() => {\n            userData.value = JSON.parse(localStorage.getItem(\"user\"));\n            const user_id = userData.value?.user?._id || '';\n\n            async function fetchData() {\n                try {\n                    const items = await store.getFavorites(user_id, { page: 1 });\n                    return favoritesData.value = items.data;\n                } catch (error) {\n                    console.error(\"There was an error in fetching data\", error);\n                }\n            }\n\n            fetchData();\n        });\n\n\t\treturn {\n\t\t\tfavoritesData,\n            userData\n\t\t};\n\t},\n\n\thead() {\n\t\treturn {\n\t\t\ttitle: this.title,\n\t\t\tmeta: [\n\t\t\t\t{ hid: \"og:title\", property: \"og:title\", content: this.title },\n\t\t\t\t{\n\t\t\t\t\thid: \"og:url\",\n\t\t\t\t\tproperty: \"og:url\",\n\t\t\t\t\tcontent: `${process.env.FRONTEND_URL}${this.$route.path}`,\n\t\t\t\t},\n\t\t\t],\n\t\t\tbodyAttrs: {\n\t\t\t\tclass: \"topnav-active\",\n\t\t\t},\n\t\t};\n\t},\n\n\tmethods: {\n\t\tloadMore() {\n\t\t\tconst store = useBackendStore();\n\t\t\tthis.loading = true;\n\n\t\t\tstore\n\t\t\t\t.getFavorites(this.userData._id, {\n\t\t\t\t\tpage: this.favoritesData.page + 1,\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.favoritesData.results = this.favoritesData.results.concat(\n\t\t\t\t\t\tresponse.data.results\n\t\t\t\t\t);\n\t\t\t\t\tthis.favoritesData.page = response.data.page;\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t});\n\t\t},\n\t},\n};\n\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"main\" }\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TopNav = _resolveComponent(\"TopNav\")\n  const _component_Listing = _resolveComponent(\"Listing\")\n\n  return (_openBlock(), _createElementBlock(\"main\", _hoisted_1, [\n    _createVNode(_component_TopNav, { title: \"Favorites\" }),\n    ($setup.favoritesData && $setup.favoritesData.results.length)\n      ? (_openBlock(), _createBlock(_component_Listing, {\n          key: 0,\n          title: \"Favorites\",\n          items: $setup.favoritesData,\n          loading: $data.loading,\n          onLoadMore: $options.loadMore\n        }, null, 8, [\"items\", \"loading\", \"onLoadMore\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1708426961222,
      "end": 1708426961227,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708426961227,
      "end": 1708426961227,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708426961227,
      "end": 1708426961227,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708426961227,
      "end": 1708426961227,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708426961228,
      "end": 1708426961228,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708426961228,
      "end": 1708426961228,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708426961228,
      "end": 1708426961228,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708426961228,
      "end": 1708426961228,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "var define_process_env_default = {};\nimport { ref, onMounted } from \"vue\";\nimport { useBackendStore } from \"~/store/backend\";\nimport TopNav from \"~/components/global/TopNav\";\nimport Listing from \"~/components/Listing\";\nconst _sfc_main = {\n  components: {\n    TopNav,\n    Listing\n  },\n  data() {\n    return {\n      loading: false\n    };\n  },\n  setup() {\n    const store = useBackendStore();\n    const favoritesData = ref(\"\");\n    const userData = ref(\"\");\n    onMounted(() => {\n      userData.value = JSON.parse(localStorage.getItem(\"user\"));\n      const user_id = userData.value?.user?._id || \"\";\n      async function fetchData() {\n        try {\n          const items = await store.getFavorites(user_id, { page: 1 });\n          return favoritesData.value = items.data;\n        } catch (error) {\n          console.error(\"There was an error in fetching data\", error);\n        }\n      }\n      fetchData();\n    });\n    return {\n      favoritesData,\n      userData\n    };\n  },\n  head() {\n    return {\n      title: this.title,\n      meta: [\n        { hid: \"og:title\", property: \"og:title\", content: this.title },\n        {\n          hid: \"og:url\",\n          property: \"og:url\",\n          content: `${define_process_env_default.FRONTEND_URL}${this.$route.path}`\n        }\n      ],\n      bodyAttrs: {\n        class: \"topnav-active\"\n      }\n    };\n  },\n  methods: {\n    loadMore() {\n      const store = useBackendStore();\n      this.loading = true;\n      store.getFavorites(this.userData._id, {\n        page: this.favoritesData.page + 1\n      }).then((response) => {\n        this.favoritesData.results = this.favoritesData.results.concat(\n          response.data.results\n        );\n        this.favoritesData.page = response.data.page;\n        this.loading = false;\n      }).catch(() => {\n        this.loading = false;\n      });\n    }\n  }\n};\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { class: \"main\" };\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TopNav = _resolveComponent(\"TopNav\");\n  const _component_Listing = _resolveComponent(\"Listing\");\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [\n    _createVNode(_component_TopNav, { title: \"Favorites\" }),\n    $setup.favoritesData && $setup.favoritesData.results.length ? (_openBlock(), _createBlock(_component_Listing, {\n      key: 0,\n      title: \"Favorites\",\n      items: $setup.favoritesData,\n      loading: $data.loading,\n      onLoadMore: $options.loadMore\n    }, null, 8, [\"items\", \"loading\", \"onLoadMore\"])) : _createCommentVNode(\"\", true)\n  ]);\n}\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n",
      "start": 1708426961228,
      "end": 1708426961451,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1708426961451,
      "end": 1708426961451,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708426961451,
      "end": 1708426961451,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708426961451,
      "end": 1708426961451,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708426961451,
      "end": 1708426961451,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708426961451,
      "end": 1708426961451,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708426961451,
      "end": 1708426961451,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708426961452,
      "end": 1708426961452,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708426961452,
      "end": 1708426961452,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708426961452,
      "end": 1708426961455,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708426961455,
      "end": 1708426961455,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1708426961455,
      "end": 1708426961456,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;AAAA"
      }
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708426961457,
      "end": 1708426961457,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708426961457,
      "end": 1708426961457,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708426961457,
      "end": 1708426961457,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708426961457,
      "end": 1708426961457,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708426961457,
      "end": 1708426961457,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708426961457,
      "end": 1708426961457,
      "order": "normal"
    }
  ]
}
