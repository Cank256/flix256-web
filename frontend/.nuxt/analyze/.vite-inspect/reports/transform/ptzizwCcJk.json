{
  "resolvedId": "/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/components/tv/Episodes.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div class=\"spacing\">\n    <div :class=\"$style.head\">\n      <select\n        v-if=\"seasons.length > 1\"\n        v-model=\"activeSeason\"\n        @change=\"getEpisodes(this.tvShowId)\">\n        <option\n          v-for=\"season in seasons\"\n          :key=\"`season-${season.season}`\"\n          :value=\"season.season\">\n          Season {{ season.season }}\n        </option>\n      </select>\n\n      <strong\n        v-if=\"activeEpisodes\"\n        :class=\"$style.count\">\n        {{ episodeCount }}\n      </strong>\n    </div>\n\n    <div\n      v-if=\"activeEpisodes\"\n      :class=\"$style.items\">\n      <EpisodesItem\n        v-for=\"episode in activeEpisodes\"\n        :key=\"`episode-${episode.id}`\"\n        :episode=\"episode\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useBackendStore } from \"~/store/backend\";\nimport EpisodesItem from '~/components/tv/EpisodesItem';\n\nexport default {\n  components: {\n    EpisodesItem,\n  },\n\n  props: {\n    numberOfSeasons: {\n      type: Number,\n      required: true,\n    },\n    tvShowId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      activeSeason: this.numberOfSeasons,\n      activeEpisodes: null,\n    };\n  },\n\n  computed: {\n    episodeCount () {\n      return `${this.activeEpisodes.length} ${this.activeEpisodes.length > 1 ? 'Episodes' : 'Episode'}`;\n    },\n\n    seasons () {\n      const seasons = [];\n\n      for (let index = 0; index < this.numberOfSeasons; index++) {\n        seasons.push({\n          season: index + 1,\n          episodes: null,\n        });\n      }\n\n      seasons.sort((a, b) => a.season > b.season ? -1 : 1);\n\n      return seasons;\n    },\n  },\n\n  mounted () {\n    this.getEpisodes(this.tvShowId);\n  },\n\n  methods: {\n    async getEpisodes (tv_show_id) {\n      const store = useBackendStore();\n      const season = this.seasons.find(season => season.season === this.activeSeason);\n\n      // if we already have the episodes, just show them\n      // else do api call\n      if (season.episodes) {\n        this.activeEpisodes = season.episodes;\n      } else {\n        // get episodes for a certain season\n        try {\n          const response = await store.getTvShowEpisodes({ tv_show_id, season: this.activeSeason });\n          season.episodes = response.data.episodes;\n          this.activeEpisodes = season.episodes;\n        } catch (error) {\n          console.error(\"Error fetching episodes:\", error);\n        }\n      }\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\" module>\n@import '~/assets/css/utilities/_variables.scss';\n\n.head {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n\n  @media (min-width: $breakpoint-large) {\n    margin-bottom: 2rem;\n  }\n\n  select {\n    margin-right: 1rem;\n  }\n}\n\n.count {\n  font-size: 1.2rem;\n  color: $text-color-grey;\n  letter-spacing: $letter-spacing;\n\n  @media (min-width: $breakpoint-large) {\n    font-size: 1.4rem;\n  }\n}\n\n.items {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -0.4rem;\n  margin-left: -0.4rem;\n}\n</style>\n",
      "start": 1708426962671,
      "end": 1708426962733,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708426962733,
      "end": 1708426962733,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { useBackendStore } from \"~/store/backend\";\nimport EpisodesItem from '~/components/tv/EpisodesItem';\n\nconst _sfc_main = {\n  components: {\n    EpisodesItem,\n  },\n\n  props: {\n    numberOfSeasons: {\n      type: Number,\n      required: true,\n    },\n    tvShowId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      activeSeason: this.numberOfSeasons,\n      activeEpisodes: null,\n    };\n  },\n\n  computed: {\n    episodeCount () {\n      return `${this.activeEpisodes.length} ${this.activeEpisodes.length > 1 ? 'Episodes' : 'Episode'}`;\n    },\n\n    seasons () {\n      const seasons = [];\n\n      for (let index = 0; index < this.numberOfSeasons; index++) {\n        seasons.push({\n          season: index + 1,\n          episodes: null,\n        });\n      }\n\n      seasons.sort((a, b) => a.season > b.season ? -1 : 1);\n\n      return seasons;\n    },\n  },\n\n  mounted () {\n    this.getEpisodes(this.tvShowId);\n  },\n\n  methods: {\n    async getEpisodes (tv_show_id) {\n      const store = useBackendStore();\n      const season = this.seasons.find(season => season.season === this.activeSeason);\n\n      // if we already have the episodes, just show them\n      // else do api call\n      if (season.episodes) {\n        this.activeEpisodes = season.episodes;\n      } else {\n        // get episodes for a certain season\n        try {\n          const response = await store.getTvShowEpisodes({ tv_show_id, season: this.activeSeason });\n          season.episodes = response.data.episodes;\n          this.activeEpisodes = season.episodes;\n        } catch (error) {\n          console.error(\"Error fetching episodes:\", error);\n        }\n      }\n    },\n  }\n};\n\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"spacing\" }\nconst _hoisted_2 = [\"value\"]\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EpisodesItem = _resolveComponent(\"EpisodesItem\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(_ctx.$style.head)\n    }, [\n      ($options.seasons.length > 1)\n        ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n            key: 0,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($data.activeSeason) = $event)),\n            onChange: _cache[1] || (_cache[1] = $event => ($options.getEpisodes(this.tvShowId)))\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.seasons, (season) => {\n              return (_openBlock(), _createElementBlock(\"option\", {\n                key: `season-${season.season}`,\n                value: season.season\n              }, \" Season \" + _toDisplayString(season.season), 9, _hoisted_2))\n            }), 128))\n          ], 544)), [\n            [_vModelSelect, $data.activeSeason]\n          ])\n        : _createCommentVNode(\"\", true),\n      ($data.activeEpisodes)\n        ? (_openBlock(), _createElementBlock(\"strong\", {\n            key: 1,\n            class: _normalizeClass(_ctx.$style.count)\n          }, _toDisplayString($options.episodeCount), 3))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    ($data.activeEpisodes)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass(_ctx.$style.items)\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activeEpisodes, (episode) => {\n            return (_openBlock(), _createBlock(_component_EpisodesItem, {\n              key: `episode-${episode.id}`,\n              episode: episode\n            }, null, 8, [\"episode\"]))\n          }), 128))\n        ], 2))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n\nimport style0 from \"/Users/caleb/Dev/ALX/Portifolio Project/source/flix256-web/frontend/components/tv/Episodes.vue?vue&type=style&index=0&lang.module.scss\"\nconst cssModules = {\n\"$style\":style0,\n}\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render],['__cssModules',cssModules]])",
      "start": 1708426962733,
      "end": 1708426962739,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708426962739,
      "end": 1708426962739,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708426962739,
      "end": 1708426962742,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708426962742,
      "end": 1708426962742,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708426962742,
      "end": 1708426962742,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708426962743,
      "end": 1708426962743,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708426962743,
      "end": 1708426962743,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708426962743,
      "end": 1708426962743,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708426962743,
      "end": 1708426962743,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708426962743,
      "end": 1708426962743,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708426962743,
      "end": 1708426962743,
      "order": "normal"
    }
  ]
}
